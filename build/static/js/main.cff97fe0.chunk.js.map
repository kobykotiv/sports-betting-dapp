{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","utils/getWeb3.js","Team.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","getWeb3","Promise","reject","window","addEventListener","results","web3","Web3","currentProvider","console","log","provider","providers","HttpProvider","contract","require","Team","props","team_letter_to_number","A","B","state","amount","input_amount","wei_conversion","getAmount","bind","bet","make_win","handle_input_change","then","eth","getAccounts","error","acc","setState","catch","BettingInstance","Betting","BettingContract","setProvider","this","accounts","deployed","instance","result","team","from","value","amountOne","call","amounntTwo","c","distributePrizes","event","converted_value","target","type","onChange","required","pattern","onClick","React","Component","App","teams","address","className","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cff97fe0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 359;","import Web3 from 'web3'\n\nlet getWeb3 = new Promise(function(resolve, reject) {\n    // Wait for loading completion before loading web3, to be sure it's\n    // already injected\n    window.addEventListener('load', function() {\n    var results\n    var web3 = window.web3\n    // Checking if Web3 has been injected by the browser MetaMask\n    if (typeof web3 !== 'undefined') {\n        // Use MetaMask's provider.\n        web3 = new Web3(web3.currentProvider)\n        results = {\n        web3: web3\n        }\n        console.log('Injected web3 detected.');\n        resolve(results)\n    } else {\n        // If no web3 is detected, then the local web3 provider is loaded.\n        var provider = new Web3.providers.HttpProvider('http://127.0.0.1:9545')\n        web3 = new Web3(provider)\n        results = {\n        web3: web3\n        }\n        console.log('No web3 instance injected, using Local web3.');\n        resolve(results)\n    }\n    })\n})\n\nexport default getWeb3","import React from 'react';\nimport getWeb3 from './utils/getWeb3';\nimport BettingContract from './contracts/Betting.json';\nimport './App.css';\n\nconst contract = require('truffle-contract');\n\nclass Team extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: '',\n            amount: '',\n            input_amount: '',\n            wei_conversion: 1000000000000000000\n        }\n\n        this.getAmount = this.getAmount.bind(this);\n        this.bet = this.bet.bind(this);\n        this.make_win = this.make_win.bind(this);\n        this.handle_input_change = this.handle_input_change.bind(this);\n    }\n\n    team_letter_to_number = {\n        A: 1,\n        B: 2\n    }\n\n    componentDidMount(){\n        getWeb3.then(results => {\n          results.web3.eth.getAccounts( (error,acc) => {\n            this.setState({\n              web3: results.web3\n            })\n          });\n          return(results.web3);\n        }).then((results) => {\n          this.getAmount(results);\n        }).catch(() => {\n          console.log('Error finding web3');\n        })\n      }\n\n    bet() {\n        const Betting = contract(BettingContract);\n        Betting.setProvider(this.state.web3.currentProvider);\n        let BettingInstance;\n\n        this.state.web3.eth.getAccounts((error, accounts) => {\n            Betting.deployed().then((instance) => {\n                BettingInstance = instance;\n            }).then((result) => {\n                return(BettingInstance.bet(this.team_letter_to_number[this.props.team], {from: accounts[0], value: this.state.input_amount}));\n            }).catch(() => {\n                console.log('Error with betting');\n            })\n        })\n    }\n\n    getAmount(web3) {\n        // Get contract using truffle-contract\n        const Betting = contract(BettingContract);\n\n        // Set provider of the contract on the current loaded provider (Metamask)\n        Betting.setProvider(web3.currentProvider);\n\n        let BettingInstance;\n\n        web3.eth.getAccounts((error, accounts) => {\n            Betting.deployed().then((instance) => {\n                BettingInstance = instance;\n            }).then((result) => {\n                switch (this.props.team) {\n                    case 'A':\n                        return(BettingInstance.amountOne.call({from: accounts[0]}));\n                    case 'B':\n                        return(BettingInstance.amounntTwo.call({from: accounts[0]}));\n                    default:\n                        break;\n                }\n            }).then((result) => {\n                this.setState({amount: result.c/1000})\n            })\n        })\n\n    }\n\n    make_win() {\n        const Betting = contract(BettingContract);\n        Betting.setProvider(this.state.web3.currentProvider);\n        let BettingInstance;\n\n        this.state.web3.eth.getAccounts((error, accounts) => {\n            Betting.deployed().then((instance) => {\n                BettingInstance = instance;\n            }).then((result) => {\n                return(BettingInstance.distributePrizes(this.team_letter_to_number[this.props.team], {from: accounts[0]}));\n            }).catch(() => {\n                console.log('Error with distributing prizes');\n            })\n        })\n    }\n\n    handle_input_change(event) {\n        const value = event.target.value;\n        const converted_value = value * this.state.wei_conversion;\n        this.setState({input_amount: converted_value});\n    }\n\n    render() {\n        return(\n            <div>\n                <h3>Team {this.props.team}</h3>\n                <p>Total amount: {this.state.amount}</p>\n                <p>Enter an amount to bet: </p>\n                <input type='text' onChange={this.handle_input_change} required pattern='[0-9]*[.,][0-9]*'></input>\n                <span>ETH</span>\n                <br></br>\n                <button onClick={this.bet}>Bet</button>\n                <br></br>\n                <button onClick={this.make_win}>Make this team win</button>\n            </div>\n        )\n    }\n}\n\nexport default Team;","import React from 'react';\nimport './App.css';\n\nimport getWeb3 from './utils/getWeb3.js';\nimport Team from './Team.js';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: '',\n      address: ''\n    }\n  }\n\n  teams = ['A', 'B'];\n\n  componentDidMount() {\n    getWeb3.then(results => {\n      results.web3.eth.getAccounts((error, acc) => {\n        this.setState({\n          address: acc[0],\n          web3: results.web3\n        })\n      })\n    }).catch(() => {\n      console.log('Error finding web3');\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Welcome to my Ethereum Betting App. Your wallet address is {this.state.address}\n          </p>\n        </header>\n        {this.teams.map((team) => (\n          <div className='team'>\n            <Team team={team} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}